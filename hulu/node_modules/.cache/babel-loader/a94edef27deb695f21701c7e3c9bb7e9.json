{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MOEED RAFIQUE\\\\hulu-clone\\\\hulu\\\\src\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Results.css';\nimport VideoCard from './VideoCard';\nimport axios from './axios';\nimport requests from './requests';\n\nfunction Results() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.u);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Results, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/MOEED RAFIQUE/hulu-clone/hulu/src/Results.js"],"names":["React","useState","VideoCard","axios","requests","Results","movies","setMovies","useEffect","fetchData","request","get","u","data","results","fetchUrl","console","table","title","map","movie","isLargeRow","base_url","poster_path","backdrop_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAO,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeC,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,QAAQ,CAACQ,CAAnB,CAAtB;AACAL,MAAAA,SAAS,CAACG,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOJ,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACM,QAAD,CAPM,CAAT;AAQAC,EAAAA,OAAO,CAACC,KAAR,CAAcX,MAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKY;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKZ,MAAM,CAACa,GAAP,CAAWC,KAAK,iBACb;AAEA,QAAA,SAAS,EAAG,eAAcC,UAAU,IAAI,kBAAmB,EAF3D;AAGA,QAAA,GAAG,EAAG,GAAEC,QAAS,GAAED,UAAU,GAAGD,KAAK,CAACG,WAAT,GAAuBH,KAAK,CAACI,aAAc,EAHxE;AAG2E,QAAA,GAAG,EAAEJ,KAAK,CAACK;AAHtF,SACOL,KAAK,CAACM,EADb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA3BQrB,O;;KAAAA,O;AA6BT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './Results.css';\r\nimport VideoCard from './VideoCard';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\n\r\nfunction Results() {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.u);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                    key = {movie.id}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;\r\n"]},"metadata":{},"sourceType":"module"}